{"name":"Verify if there are songs by existing genre","id":"search-by-genre;verify-if-there-are-songs-by-existing-genre","testSteps":[{"number":1,"description":"Verify if there are songs by existing genre #1: {genre\u003dHip Hop}","duration":435,"startTime":"2018-09-11T18:35:15.988-05:00[America/Bogota]","exception":{"errorType":"com.google.gson.stream.MalformedJsonException","message":"Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $","stackTrace":[{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"syntaxError","fileName":"JsonReader.java","lineNumber":1559},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"checkLenient","fileName":"JsonReader.java","lineNumber":1401},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"doPeek","fileName":"JsonReader.java","lineNumber":542},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"peek","fileName":"JsonReader.java","lineNumber":425},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":60},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":45},{"declaringClass":"packages.Helpers.JsonHelper","methodName":"getJsonObjectListFromResponse","fileName":"JsonHelper.java","lineNumber":18},{"declaringClass":"packages.Helpers.RequestManager","methodName":"assertNumberOfSongs","fileName":"RequestManager.java","lineNumber":57},{"declaringClass":"packages.glue.GenreSteps","methodName":"iSeeTheTopSong","fileName":"GenreSteps.java","lineNumber":25},{"declaringClass":"cucumber.runner.Runner","methodName":"runPickle","fileName":"Runner.java","lineNumber":80}]},"result":"ERROR","precondition":false,"children":[{"number":2,"description":"Given I have \"genre\" endpoint","duration":3,"startTime":"2018-09-11T18:35:15.989-05:00[America/Bogota]","result":"SUCCESS","precondition":false},{"number":3,"description":"When I send a request for a \"Hip Hop\"","duration":409,"startTime":"2018-09-11T18:35:15.993-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"children":[{"number":4,"description":"GET http://localhost:7070/kafka-music/charts/genreHip%20Hop\r\r","duration":0,"startTime":"2018-09-11T18:35:16.401-05:00[America/Bogota]","result":"SUCCESS","restQuery":{"method":"GET","path":"http://localhost:7070/kafka-music/charts/genreHip%20Hop\r\r","content":"\r","contentType":"application/json","requestHeaders":"Accept\u003d*/*\r\n\t\t\t\tContent-Type\u003dapplication/json; charset\u003dUTF-8\r\r","requestCookies":"\r\r","responseHeaders":"Date: Tue, 11 Sep 2018 23:35:16 GMT\nCache-Control: must-revalidate,no-cache,no-store\nContent-Type: text/html; charset\u003dISO-8859-1\nContent-Length: 311\nServer: Jetty(9.2.z-SNAPSHOT)\r","responseCookies":"\r","responseBody":"\u003chtml\u003e\n  \u003chead\u003e\n    \u003cmeta http-equiv\u003d\"Content-Type\" content\u003d\"text/html;charset\u003dISO-8859-1\"/\u003e\n    \u003ctitle\u003eError 404 \u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003ch2\u003eHTTP ERROR: 404\u003c/h2\u003e\n    \u003cp\u003eProblem accessing /kafka-music/charts/genreHip%20Hop. Reason:\n\u003c/p\u003e\n    \u003cpre\u003e    Not Found\u003c/pre\u003e\n    \u003chr/\u003e\n    \u003ci\u003e\n      \u003csmall\u003ePowered by Jetty://\u003c/small\u003e\n    \u003c/i\u003e\n  \u003c/body\u003e\n\u003c/html\u003e","statusCode":404},"precondition":false}]},{"number":5,"description":"Then I see the top 5 song","duration":16,"startTime":"2018-09-11T18:35:16.402-05:00[America/Bogota]","exception":{"errorType":"com.google.gson.stream.MalformedJsonException","message":"Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $","stackTrace":[{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"syntaxError","fileName":"JsonReader.java","lineNumber":1559},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"checkLenient","fileName":"JsonReader.java","lineNumber":1401},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"doPeek","fileName":"JsonReader.java","lineNumber":542},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"peek","fileName":"JsonReader.java","lineNumber":425},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":60},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":45},{"declaringClass":"packages.Helpers.JsonHelper","methodName":"getJsonObjectListFromResponse","fileName":"JsonHelper.java","lineNumber":18},{"declaringClass":"packages.Helpers.RequestManager","methodName":"assertNumberOfSongs","fileName":"RequestManager.java","lineNumber":57},{"declaringClass":"packages.glue.GenreSteps","methodName":"iSeeTheTopSong","fileName":"GenreSteps.java","lineNumber":25},{"declaringClass":"cucumber.runner.Runner","methodName":"runPickle","fileName":"Runner.java","lineNumber":80}]},"result":"ERROR","precondition":false}]},{"number":6,"description":"Verify if there are songs by existing genre #2: {genre\u003dPunk}","duration":52,"startTime":"2018-09-11T18:35:16.562-05:00[America/Bogota]","exception":{"errorType":"com.google.gson.stream.MalformedJsonException","message":"Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $","stackTrace":[{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"syntaxError","fileName":"JsonReader.java","lineNumber":1559},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"checkLenient","fileName":"JsonReader.java","lineNumber":1401},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"doPeek","fileName":"JsonReader.java","lineNumber":542},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"peek","fileName":"JsonReader.java","lineNumber":425},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":60},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":45},{"declaringClass":"packages.Helpers.JsonHelper","methodName":"getJsonObjectListFromResponse","fileName":"JsonHelper.java","lineNumber":18},{"declaringClass":"packages.Helpers.RequestManager","methodName":"assertNumberOfSongs","fileName":"RequestManager.java","lineNumber":57},{"declaringClass":"packages.glue.GenreSteps","methodName":"iSeeTheTopSong","fileName":"GenreSteps.java","lineNumber":25},{"declaringClass":"cucumber.runner.Runner","methodName":"runPickle","fileName":"Runner.java","lineNumber":80}]},"result":"ERROR","precondition":false,"children":[{"number":7,"description":"Given I have \"genre\" endpoint","duration":2,"startTime":"2018-09-11T18:35:16.562-05:00[America/Bogota]","result":"SUCCESS","precondition":false},{"number":8,"description":"When I send a request for a \"Punk\"","duration":42,"startTime":"2018-09-11T18:35:16.564-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"children":[{"number":9,"description":"GET http://localhost:7070/kafka-music/charts/genrePunk\r\r","duration":0,"startTime":"2018-09-11T18:35:16.605-05:00[America/Bogota]","result":"SUCCESS","restQuery":{"method":"GET","path":"http://localhost:7070/kafka-music/charts/genrePunk\r\r","content":"\r","contentType":"application/json","requestHeaders":"Accept\u003d*/*\r\n\t\t\t\tContent-Type\u003dapplication/json; charset\u003dUTF-8\r\r","requestCookies":"\r\r","responseHeaders":"Date: Tue, 11 Sep 2018 23:35:16 GMT\nCache-Control: must-revalidate,no-cache,no-store\nContent-Type: text/html; charset\u003dISO-8859-1\nContent-Length: 306\nServer: Jetty(9.2.z-SNAPSHOT)\r","responseCookies":"\r","responseBody":"\u003chtml\u003e\n  \u003chead\u003e\n    \u003cmeta http-equiv\u003d\"Content-Type\" content\u003d\"text/html;charset\u003dISO-8859-1\"/\u003e\n    \u003ctitle\u003eError 404 \u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003ch2\u003eHTTP ERROR: 404\u003c/h2\u003e\n    \u003cp\u003eProblem accessing /kafka-music/charts/genrePunk. Reason:\n\u003c/p\u003e\n    \u003cpre\u003e    Not Found\u003c/pre\u003e\n    \u003chr/\u003e\n    \u003ci\u003e\n      \u003csmall\u003ePowered by Jetty://\u003c/small\u003e\n    \u003c/i\u003e\n  \u003c/body\u003e\n\u003c/html\u003e","statusCode":404},"precondition":false}]},{"number":10,"description":"Then I see the top 5 song","duration":4,"startTime":"2018-09-11T18:35:16.606-05:00[America/Bogota]","exception":{"errorType":"com.google.gson.stream.MalformedJsonException","message":"Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $","stackTrace":[{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"syntaxError","fileName":"JsonReader.java","lineNumber":1559},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"checkLenient","fileName":"JsonReader.java","lineNumber":1401},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"doPeek","fileName":"JsonReader.java","lineNumber":542},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"peek","fileName":"JsonReader.java","lineNumber":425},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":60},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":45},{"declaringClass":"packages.Helpers.JsonHelper","methodName":"getJsonObjectListFromResponse","fileName":"JsonHelper.java","lineNumber":18},{"declaringClass":"packages.Helpers.RequestManager","methodName":"assertNumberOfSongs","fileName":"RequestManager.java","lineNumber":57},{"declaringClass":"packages.glue.GenreSteps","methodName":"iSeeTheTopSong","fileName":"GenreSteps.java","lineNumber":25},{"declaringClass":"cucumber.runner.Runner","methodName":"runPickle","fileName":"Runner.java","lineNumber":80}]},"result":"ERROR","precondition":false}]}],"userStory":{"id":"search-by-genre","storyName":"Search by genre","path":"src/test/resources/features/searchSongsByGenre.feature","narrative":"  As a user\n  I want to search songs by genre\n  So That I can see the songs that belong to that genre","type":"feature"},"featureTag":{"name":"Features/Search by genre","type":"feature"},"title":"Verify if there are songs by existing genre","tags":[{"name":"Search by genre","type":"feature"}],"startTime":"2018-09-11T18:35:15.986-05:00[America/Bogota]","duration":1651,"testFailureCause":{"errorType":"com.google.gson.stream.MalformedJsonException","message":"Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $","stackTrace":[{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"syntaxError","fileName":"JsonReader.java","lineNumber":1559},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"checkLenient","fileName":"JsonReader.java","lineNumber":1401},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"doPeek","fileName":"JsonReader.java","lineNumber":542},{"declaringClass":"com.google.gson.stream.JsonReader","methodName":"peek","fileName":"JsonReader.java","lineNumber":425},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":60},{"declaringClass":"com.google.gson.JsonParser","methodName":"parse","fileName":"JsonParser.java","lineNumber":45},{"declaringClass":"packages.Helpers.JsonHelper","methodName":"getJsonObjectListFromResponse","fileName":"JsonHelper.java","lineNumber":18},{"declaringClass":"packages.Helpers.RequestManager","methodName":"assertNumberOfSongs","fileName":"RequestManager.java","lineNumber":57},{"declaringClass":"packages.glue.GenreSteps","methodName":"iSeeTheTopSong","fileName":"GenreSteps.java","lineNumber":25},{"declaringClass":"cucumber.runner.Runner","methodName":"runPickle","fileName":"Runner.java","lineNumber":80}]},"testFailureClassname":"com.google.gson.stream.MalformedJsonException","testFailureMessage":"Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $","testFailureSummary":"ERROR;com.google.gson.stream.MalformedJsonException;Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 2 path $;JsonReader.java","projectKey":"","dataTable":{"headers":["genre"],"rows":[{"values":["Hip Hop"],"result":"ERROR"},{"values":["Punk"],"result":"ERROR"}],"predefinedRows":true,"scenarioOutline":"Given I have \"genre\" endpoint\n\rWhen I send a request for a \"\u003cgenre\u003e\"\n\rThen I see the top 5 song\n\r","dataSetDescriptors":[{"startRow":0,"rowCount":0,"name":""}]},"manual":false,"testSource":"Cucumber","result":"ERROR"}